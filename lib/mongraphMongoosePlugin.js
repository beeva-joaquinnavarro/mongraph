// Generated by CoffeeScript 1.6.2
var exports, mongraphMongoosePlugin, processtools;

processtools = require('./processtools');

module.exports = exports = mongraphMongoosePlugin = function(schema, options) {
  var _base, _base1, _base2, _ref, _ref1, _ref2, _ref3;

  if (options == null) {
    options = {};
  }
  if ((_ref = options.relationships) == null) {
    options.relationships = {};
  }
  if ((_ref1 = (_base = options.relationships).removeAllOutgoing) == null) {
    _base.removeAllOutgoing = true;
  }
  if ((_ref2 = (_base1 = options.relationships).removeAllIncoming) == null) {
    _base1.removeAllIncoming = true;
  }
  if ((_ref3 = (_base2 = options.relationships).storeInDocument) == null) {
    _base2.storeInDocument = false;
  }
  schema.add({
    _node_id: Number
  }, schema.add({
    _relationships: {}
  }));
  schema.pre('remove', function(errHandler, cb) {
    var opts;

    opts = {
      includeRelationships: options.relationships.removeAllOutgoing && options.relationships.removeAllOutgoing
    };
    return this.removeNode(opts, cb);
  });
  return schema.pre('save', true, function(next, done) {
    var doc;

    doc = this;
    next();
    if (options.relationships.storeInDocument) {
      return doc.getNode({
        forceCreation: true
      }, function(err, node) {
        return doc.allRelationships('*', function(err, relationships) {
          var collectionName, data, part, relation, sortedRelationships, _i, _id, _j, _len, _len1, _name, _ref4, _ref5, _ref6, _ref7;

          if ((relationships != null ? relationships.length : void 0) > 0) {
            sortedRelationships = {};
            for (_i = 0, _len = relationships.length; _i < _len; _i++) {
              relation = relationships[_i];
              if ((_ref4 = relation._data) != null ? _ref4.type : void 0) {
                data = {};
                _ref5 = ['from', 'to'];
                for (_j = 0, _len1 = _ref5.length; _j < _len1; _j++) {
                  part = _ref5[_j];
                  _ref6 = processtools.extractCollectionAndId(relation.data["_" + part]), collectionName = _ref6.collectionName, _id = _ref6._id;
                  data[part] = {
                    collection: collectionName,
                    _id: processtools.ObjectId(_id)
                  };
                }
                if ((_ref7 = sortedRelationships[_name = relation._data.type]) == null) {
                  sortedRelationships[_name] = [];
                }
                sortedRelationships[relation._data.type].push(data);
              }
            }
          }
          doc._relationships = sortedRelationships;
          return done(err, null);
        });
      });
    } else {
      return doc.getNode({
        forceCreation: true
      }, done);
    }
  });
};
